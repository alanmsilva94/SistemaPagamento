package br.com.senac.sistemapagamento.views;

import br.com.senac.sistemapagamento.dao.EmpresaDAO;
import br.com.senac.sistemapagamento.dao.FuncionarioDAO;
import br.com.senac.sistemapagamento.dao.PagamentoDAO;
import br.com.senac.sistemapagamento.models.Empresa;
import br.com.senac.sistemapagamento.models.Pagamento;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Tela responsável por exibir e gerenciar os pagamentos cadastrados no sistema.
 * Permite visualização, inclusão, exclusão e pesquisa de pagamentos.
 * 
 * @author alanm
 */
public class TelaPagamento extends javax.swing.JFrame {

    /**
     * Método que preenche a tabela com os dados de pagamentos recebidos como parâmetro.
     * 
     * @param pagamentos Lista de pagamentos a serem exibidos na tabela.
     */
    public void preencherTabela(List<Pagamento> pagamentos) {
        // Define os nomes das colunas que serão exibidas na tabela
        String colunas[] = {
            "ID", "Empresa", "CNPJ", "Vlr Pagamento", "Data Pagamento",
            "Departamento", "Funcionário", "Telefone", "E-mail"
        };

        // Cria uma matriz para armazenar os dados dos pagamentos
        String dados[][] = new String[pagamentos.size()][colunas.length];

        // Percorre a lista de pagamentos e preenche os dados na matriz
        int i = 0;
        for (Pagamento p : pagamentos) {
            dados[i] = new String[]{
                String.valueOf(p.getId()),
                p.getEmpresa().getNomeEmpresa(),
                p.getEmpresa().getCnpj(),
                String.valueOf(p.getValor_pgto()),
                p.getData_pgto(),
                p.getFuncionario().getDepartamento().getNome_depart(),
                p.getFuncionario().getNome_fun(),
                p.getFuncionario().getTelefone_fun(),
                p.getFuncionario().getEmail_fun()
            };
            i++;
        }

        // Cria um modelo de tabela com os dados e colunas e define na tabela da interface gráfica
        DefaultTableModel model = new DefaultTableModel(dados, colunas);
        tbPagamento.setModel(model);
    }

        /**
     * Método que exibe todos os pagamentos cadastrados na tabela.
     */
    public void exibirDados() {
        try {
            PagamentoDAO pagamentoDAO = new PagamentoDAO();
            List<Pagamento> resultados = pagamentoDAO.listar();
            preencherTabela(resultados);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar dados: " + ex.getMessage());
        }

    }

        /**
     * Construtor que inicializa a tela de pagamento e exibe os dados na tabela.
     */
    public TelaPagamento() {
        initComponents();
        setTitle("Sistema de cadastro de Pagamento - SCP");
        exibirDados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbPagamento = new javax.swing.JTable();
        btnIncluir = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnTelaInicial = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtPesquisar = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Tela de Pagamentos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N

        tbPagamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Empresa", "CNPJ", "Vlr Pagamento", "Data Pagamento", "Departamento", "Funcionário", "Telefone", "E-mail"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbPagamento);

        btnIncluir.setBackground(new java.awt.Color(0, 51, 204));
        btnIncluir.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnIncluir.setForeground(new java.awt.Color(255, 255, 255));
        btnIncluir.setText("Incluir");
        btnIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirActionPerformed(evt);
            }
        });

        btnExcluir.setBackground(new java.awt.Color(255, 255, 255));
        btnExcluir.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnExcluir.setForeground(new java.awt.Color(0, 0, 0));
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnTelaInicial.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnTelaInicial.setText("Tela Inicial");
        btnTelaInicial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTelaInicialActionPerformed(evt);
            }
        });

        jLabel1.setText("Pesquisar:");

        txtPesquisar.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtPesquisarCaretUpdate(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnIncluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(388, 388, 388)
                .addComponent(btnTelaInicial)
                .addContainerGap(407, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIncluir)
                    .addComponent(btnExcluir)
                    .addComponent(jLabel1)
                    .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnTelaInicial)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

        /**
     * Ação executada ao clicar no botão "Incluir".
     * Abre a tela de cadastro de pagamentos.
     */
    private void btnIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirActionPerformed
        CadastroPagamentos cadastroPagamentos = new CadastroPagamentos();
        cadastroPagamentos.setVisible(true);
    }//GEN-LAST:event_btnIncluirActionPerformed

        /**
     * Ação executada ao clicar no botão "Excluir".
     * Remove o pagamento selecionado na tabela.
     */
    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int linhaSelecionada = tbPagamento.getSelectedRow(); // Obtém a linha selecionada na tabela

        if (linhaSelecionada != -1) {// Verifica se alguma linha foi selecionada

            // Obtém os IDs dos registros selecionados
            Object valorempresaID = tbPagamento.getValueAt(linhaSelecionada, 0);
            Object valorpgtoID = tbPagamento.getValueAt(linhaSelecionada, 0);
            Object valorfuncID = tbPagamento.getValueAt(linhaSelecionada, 0);

            if (valorempresaID != null && valorpgtoID != null && valorfuncID != null) {

                int empresaID = Integer.parseInt(valorempresaID.toString());
                int pgtoID = Integer.parseInt(valorpgtoID.toString());
                int funcID = Integer.parseInt(valorfuncID.toString());

                // Confirmação antes de excluir
                int confirmacao = JOptionPane.showConfirmDialog(
                        this, "Tem certeza que deseja excluir este pagamento?",
                        "Confirmação", JOptionPane.YES_NO_OPTION);

                if (confirmacao == JOptionPane.YES_OPTION) {
                    EmpresaDAO empresaDAO = new EmpresaDAO();
                    PagamentoDAO pagamentoDAO = new PagamentoDAO();
                    FuncionarioDAO funcDAO = new FuncionarioDAO();

                    // Exclui a empresa, pagamento e funcionário associados ao ID
                    empresaDAO.excluirEmpresa(empresaID);
                    pagamentoDAO.excluirPagamento(pgtoID);
                    funcDAO.excluirFuncionario(funcID);

                    // Atualizar a tabela após a exclusão
                    exibirDados();
                }
            }
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

        /**
     * Ação executada ao clicar no botão "Tela Inicial".
     * Abre a tela inicial do sistema.
     */
    private void btnTelaInicialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTelaInicialActionPerformed
        TelaInicial telaInicial = new TelaInicial();
        telaInicial.setVisible(true);
    }//GEN-LAST:event_btnTelaInicialActionPerformed

        /**
     * Ação executada ao digitar no campo de pesquisa.
     * Filtra os pagamentos com base na pesquisa do usuário.
     */
    private void txtPesquisarCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtPesquisarCaretUpdate
        // Captura o texto digitado
        String filtro = txtPesquisar.getText().trim();
        
        // Verifica se há algum texto digitado
        if (!filtro.isEmpty()) { 
            try {
                
                EmpresaDAO empresaDAO = new EmpresaDAO();
                List<Empresa> empresasFiltradas = empresaDAO.listarEmpresa(filtro);

                if (empresasFiltradas.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Nenhuma empresa encontrada com esse nome.");
                } else {
                    // Filtrar os pagamentos pela empresa encontrada
                    PagamentoDAO pagamentoDAO = new PagamentoDAO();
                    List<Pagamento> pagamentosFiltrados = pagamentoDAO.listarPagamentosPorEmpresa(empresasFiltradas);

                    // Preencher a tabela com os pagamentos filtrados
                    preencherTabela(pagamentosFiltrados);
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Erro ao buscar empresa: " + ex.getMessage());
            }
        } else {
            exibirDados();
        }
    }//GEN-LAST:event_txtPesquisarCaretUpdate

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPagamento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnIncluir;
    private javax.swing.JButton btnTelaInicial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbPagamento;
    private javax.swing.JTextField txtPesquisar;
    // End of variables declaration//GEN-END:variables
}
